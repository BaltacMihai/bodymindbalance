---
import { Image } from "astro:assets";
import arrowIcon from "./../../icons/arrow.svg";
import randomIdGenerator from "./../../functions/randomIdGenerator";

const ref = randomIdGenerator();
---

<!-- _________________________ Start Dropdown _________________________ -->
<div class="dropdown" id={ref}>
  <div class="dropdown__link" id="dropdown-link">
    <slot name="dropdown__trigger" />
    <Image src={arrowIcon} alt="Arrow Icon" id="arrow" class="arrow" />
  </div>
  <span class="dropdown__content" id="dropdown__content" data-visible="false">
    <slot name="dropdown__content" />
  </span>
</div>

<script define:vars={{ ref }}>
  const triggerDropdownScript = () => {
    const dropdownLink = document.querySelector(`#${ref} .dropdown__link`);
    const dropdown = document.getElementById(ref);
    function openDropdown() {
      dropdown?.classList.add("active");
    }

    function closeDropdown() {
      dropdown?.classList.remove("active");
    }

    function triggerDropdown() {
      if (!dropdown?.classList.contains("active")) {
        openDropdown();
      } else {
        closeDropdown();
      }
    }

    const updateMouseOverListeners = () => {
      if (window.innerWidth > 768) {
        dropdown?.addEventListener("mouseenter", openDropdown);
        dropdown?.addEventListener("mouseleave", closeDropdown);
      } else {
        dropdown?.removeEventListener("mouseenter", openDropdown);
        dropdown?.removeEventListener("mouseleave", closeDropdown);
      }
    };
    // Initial runs
    updateMouseOverListeners();
    window.addEventListener("resize", updateMouseOverListeners);

    dropdownLink.addEventListener("click", triggerDropdown);
  };

  // Runs on initial navigation
  triggerDropdownScript();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", triggerDropdownScript);
</script>

<!-- _________________________ Finish Dropdown _________________________ -->

<style lang="scss" scoped>
  @use "./../../style/_responsive.scss" as *;

  .dropdown {
    position: relative;
    --dropdown_bg_cl: var(--cl-white);

    @include responsive(md) {
      align-items: center;
      display: flex;
      flex-direction: column;
    }

    &__link {
      display: flex;
      align-items: center;
      margin-right: 0.5rem;

      &:hover {
        cursor: pointer;

        .arrow {
          opacity: 0.5;
        }
      }
    }

    &__content {
      $distance: 1.5rem;
      position: absolute;
      display: none;
      background-color: var(--dropdown_bg_cl);
      box-shadow: 0px 20px 20px 0px rgba(128, 114, 154, 0.2);
      width: max-content;

      @include responsive(md) {
        position: relative;
        box-shadow: none;
        padding-bottom: 0;
      }
      :global(ul) {
        padding: $distance;
        display: flex;
        flex-direction: column;
        gap: calc($distance / 2);

        @include responsive(md) {
          padding: 0;

          :global(li) {
            align-self: center;
          }
        }
      }
    }

    // Toggle the dropdown

    .dropdown__content {
      display: flex;
      opacity: 0;
      transition:
        opacity 0.25s,
        visibility 0.25s;
      visibility: hidden;

      @include responsive(md) {
        display: none;
        opacity: 1;
        visibility: visible;
        transition: none;
      }
    }

    &.active {
      .arrow {
        transform: scaleY(-1);
      }

      .dropdown__content {
        opacity: 1;
        visibility: visible;

        @include responsive(md) {
          display: flex;
        }
      }
    }
  }
</style>
